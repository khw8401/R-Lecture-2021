patients1[length(patients1)+1] <- c('몽룡','19','M')
# date frame 행 추가
length(patients1)
patients1[length(patients1)+1] <- c('몽룡','19','M')
# date frame 행 추가
length(patients1)
# date frame 행 추가
length(patients1)
patients1
patients2[length(patients2)+1]<-c('영희','A')
#병합(merge)
patients
patients1  <- data.frame(name,age,gender)
patients2  <- data.frame(name,blood_type)
#date frame
name <- c('철수','춘향','길동')
age <- c(20,22,25)
gender <- factor(c('M','F','M'))
blood_type <- factor(c('A','O','B'))
patients <- data.frame(name,age,gender,blood_type)
patients
patients$name
typeof(patients$name)
patients[1,]   #첫 번쩨 행 모두
patients[,2]   #patients$age 와 동일
patients[2,3]  #F
patients$gender[3]
patients[patients$name=='철수',]  #patients[1,] 이것과 동일, filtering
patients[patients$name=='철수',c("age",'gender')]   #selction
#date frame의 속성명을 변수명으로 사용
attach(patients)
name
blood_type
detach(patients)
head(cars)
attach(cars)
speed
dist
detach(cars)
speed   #에러: 객체 'speed'를 찾을 수 없다.
mean(cars$speed)
max(cars$dist)
with(cars,mean(speed))
#subset
subset(cars,speed>20)
cars[cars$speed>20,]
subset(cars,speed>20, select = c(dist))
subset(cars,speed>20,c('dist'))
subset(cars,speed>20,-c(dist))
# 결측값 NA 처리
head(airquality)
str(airquality)
sum(airquality$Ozone)
head(na.omit(airquality)) #NA가 포함된 행 전체를 제거
#병합(merge)
patients
patients1  <- data.frame(name,age,gender)
patients2  <- data.frame(name,blood_type)
merge(patients1,patients2, by='name')
# date frame 행 추가
length(patients1)
patients1[length(patients1)+1] <- c('몽룡','19','M')
patients1
patients2[length(patients2)+1]<-c('영희','A')
patients1
View(patients2)
patients2  <- data.frame(name,blood_type)
patients2[length(patients2)+2]<-c('영희','A')
# date frame 행 추가
length(patients1$name)
patients1[length(patients1$name)+1] <- c('몽룡','19','M')
patients1
patients2[length(patients2$name)+2]<-c('영희','A')
patients2
patients2[length(patients2$name)+2] <-c('영희','A')
patients2
#date frame 열 추가
patients1['birth_year']<-c(1500,1550,1600,1800)
patients1
#merge
#inner join
merge(patients1,patients2)
#date frame 열 추가
patients1['birth_year']<-c(1500,1550,1600,1800)
#date frame 열 추가
patients1['birth_year'] <- c(1500,1550,1600,1800)
#merge
#inner join
merge(patients1,patients2)
#left outer join
merge(patients1,patients2,all.x = T)
#right outer join
merge(patients1,patients2,all.y = T)
#full outer join
merge(patients1,patients2,all.x = T,all.y = T)
# 파일 읽기
getwd()
students <- read.table('data/students.txt', header = T)
students <- read.table('data/students1.txt', header = T)
students
str(students)
students <- read.csv('data/student.csv')
#read.csv 는 첫 행을 헤더로 읽는 것이 디폴트
students <- read.csv('data/students.csv')
#read.csv 는 첫 행을 헤더로 읽는 것이 디폴트
students <- read.csv('data/students.csv')
students
#파일쓰기
write.table(students,file = 'data/output.txt')
?write.table
#students.csv 파일 읽어서 학점 부여하기
students <- read.csv('data/students.csv')
#students.csv 파일 읽어서 학점 부여하기
students <- read.csv('data/students.csv',fileEncoding = 'euc-kr')
options(digits = 4)
airquality
head(airquality)
str(airquality)
sum(airquality)
quakes
str(quakes)
x <- c(1:100)
y <- c(1:100)
x <- x[x%%3==0]
y <- y[y%%4==0]
intersect(x,y)
sum(intersect(x,y))
str(airquality)
?airquality
x <- c(1:100)
y <- c(1:!00)
y <- c(1:100)
x <- x[x%%3==o]
x <- x[x%%3==0]
y <- y[y%%4==0]
intersect(x,y)
sum(intersect(x,y))
?airquality
?quakes
quakes
head(quakes)
?airquality
airquality
as.data.frame(airquality)
max(airquality$Wind)
sum(is.na(airquality))
max(quakes$mag)
mean(quakes$long)
mean(quakes$mag)
1.
x <- c(1:100)
y <- c(1:100)
x <- x[x%%3==0]
y <- y[y%%4==0]
2.
intersect(x,y)
sum(intersect(x,y))
3.
?airquality
New York
4.
F
5.
?airquality
max(airquality$Wind)
6.
sum(is.na(airquality))
7.
?quakes
Fiji
8.
max(quakes$mag)
?airquality
